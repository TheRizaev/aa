# Generated by Django 3.2 on 2025-05-28 15:42

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('main', '0008_chathistory_is_voice'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyticsAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alert_type', models.CharField(choices=[('spike', '–†–µ–∑–∫–∏–π —Ä–æ—Å—Ç'), ('drop', '–†–µ–∑–∫–æ–µ –ø–∞–¥–µ–Ω–∏–µ'), ('goal_achieved', '–¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞'), ('threshold', '–ü—Ä–µ–≤—ã—à–µ–Ω –ø–æ—Ä–æ–≥'), ('anomaly', '–ê–Ω–æ–º–∞–ª–∏—è'), ('milestone', '–í–µ—Ö–∞')], max_length=20)),
                ('severity', models.CharField(choices=[('low', '–ù–∏–∑–∫–∞—è'), ('medium', '–°—Ä–µ–¥–Ω—è—è'), ('high', '–í—ã—Å–æ–∫–∞—è'), ('critical', '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è')], default='medium', max_length=10)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('related_video_id', models.CharField(blank=True, max_length=255, null=True)),
                ('related_metric', models.CharField(blank=True, max_length=100, null=True)),
                ('metric_value', models.FloatField(blank=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('is_dismissed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Analytics Alert',
                'verbose_name_plural': 'Analytics Alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsGoal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('goal_type', models.CharField(choices=[('views', '–ü—Ä–æ—Å–º–æ—Ç—Ä—ã'), ('subscribers', '–ü–æ–¥–ø–∏—Å—á–∏–∫–∏'), ('engagement', '–í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å'), ('watch_time', '–í—Ä–µ–º—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞'), ('revenue', '–î–æ—Ö–æ–¥'), ('custom', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è')], max_length=20)),
                ('target_value', models.FloatField()),
                ('current_value', models.FloatField(default=0.0)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_achieved', models.BooleanField(default=False)),
                ('achievement_date', models.DateTimeField(blank=True, null=True)),
                ('notify_on_progress', models.BooleanField(default=True)),
                ('notify_on_achievement', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Analytics Goal',
                'verbose_name_plural': 'Analytics Goals',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('report_type', models.CharField(choices=[('daily', '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π'), ('weekly', '–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π'), ('monthly', '–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π'), ('quarterly', '–ö–≤–∞—Ä—Ç–∞–ª—å–Ω—ã–π'), ('yearly', '–ì–æ–¥–æ–≤–æ–π'), ('custom', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('report_data', models.JSONField(default=dict)),
                ('include_videos', models.BooleanField(default=True)),
                ('include_demographics', models.BooleanField(default=True)),
                ('include_traffic', models.BooleanField(default=True)),
                ('include_revenue', models.BooleanField(default=False)),
                ('is_automated', models.BooleanField(default=False)),
                ('next_generation_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Analytics Report',
                'verbose_name_plural': 'Analytics Reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_start', models.DateTimeField(auto_now_add=True)),
                ('session_end', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=500)),
                ('pages_viewed', models.PositiveIntegerField(default=0)),
                ('total_time_spent', models.DurationField(default=datetime.timedelta(0))),
            ],
            options={
                'verbose_name': 'Analytics Session',
                'verbose_name_plural': 'Analytics Sessions',
                'ordering': ['-session_start'],
            },
        ),
        migrations.CreateModel(
            name='ChannelAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('channel_owner', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('total_views', models.PositiveIntegerField(default=0)),
                ('total_subscribers', models.PositiveIntegerField(default=0)),
                ('new_subscribers', models.IntegerField(default=0)),
                ('total_videos', models.PositiveIntegerField(default=0)),
                ('total_likes', models.PositiveIntegerField(default=0)),
                ('total_dislikes', models.PositiveIntegerField(default=0)),
                ('total_comments', models.PositiveIntegerField(default=0)),
                ('total_shares', models.PositiveIntegerField(default=0)),
                ('total_watch_time', models.DurationField(default=datetime.timedelta(0))),
                ('average_session_duration', models.DurationField(default=datetime.timedelta(0))),
                ('estimated_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('ad_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Channel Analytics',
                'verbose_name_plural': 'Channel Analytics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='–ù–∞–∑–≤–∞–Ω–∏–µ')),
                ('description', models.TextField(verbose_name='–û–ø–∏—Å–∞–Ω–∏–µ')),
                ('file_path', models.CharField(max_length=500)),
                ('file_name', models.CharField(max_length=255)),
                ('file_size', models.BigIntegerField()),
                ('file_type', models.CharField(choices=[('book', 'üìö –ö–Ω–∏–≥–∞'), ('pdf', 'üìÑ PDF –¥–æ–∫—É–º–µ–Ω—Ç'), ('presentation', 'üìä –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è'), ('document', 'üìù –î–æ–∫—É–º–µ–Ω—Ç'), ('archive', 'üì¶ –ê—Ä—Ö–∏–≤'), ('spreadsheet', 'üìà –¢–∞–±–ª–∏—Ü–∞'), ('image', 'üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'), ('audio', 'üéµ –ê—É–¥–∏–æ'), ('other', 'üìé –î—Ä—É–≥–æ–µ')], max_length=20)),
                ('mime_type', models.CharField(max_length=100)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Material',
                'verbose_name_plural': 'Materials',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MaterialCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('icon', models.CharField(default='üìö', max_length=50)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Material Category',
                'verbose_name_plural': 'Material Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MaterialCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Material Collection',
                'verbose_name_plural': 'Material Collections',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='MaterialDownload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('downloaded_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'verbose_name': 'Material Download',
                'verbose_name_plural': 'Material Downloads',
                'ordering': ['-downloaded_at'],
            },
        ),
        migrations.CreateModel(
            name='MaterialRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('review', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Material Rating',
                'verbose_name_plural': 'Material Ratings',
            },
        ),
        migrations.CreateModel(
            name='TrafficSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('video_id', models.CharField(blank=True, max_length=255, null=True)),
                ('channel_owner', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('source_type', models.CharField(choices=[('direct', '–ü—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥'), ('search', '–ü–æ–∏—Å–∫–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã'), ('social', '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏'), ('external', '–í–Ω–µ—à–Ω–∏–µ —Å–∞–π—Ç—ã'), ('kronik_home', '–ì–ª–∞–≤–Ω–∞—è KRONIK'), ('kronik_search', '–ü–æ–∏—Å–∫ KRONIK'), ('subscriptions', '–ü–æ–¥–ø–∏—Å–∫–∏'), ('notifications', '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'), ('email', 'Email'), ('other', '–î—Ä—É–≥–æ–µ')], max_length=20)),
                ('source_name', models.CharField(max_length=255)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('unique_visitors', models.PositiveIntegerField(default=0)),
                ('bounce_rate', models.FloatField(default=0.0)),
                ('average_session_duration', models.DurationField(default=datetime.timedelta(0))),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Traffic Source',
                'verbose_name_plural': 'Traffic Sources',
                'ordering': ['-date', '-views_count'],
            },
        ),
        migrations.CreateModel(
            name='VideoAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('video_id', models.CharField(max_length=255)),
                ('video_owner', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('unique_viewers', models.PositiveIntegerField(default=0)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('dislikes_count', models.PositiveIntegerField(default=0)),
                ('comments_count', models.PositiveIntegerField(default=0)),
                ('shares_count', models.PositiveIntegerField(default=0)),
                ('total_watch_time', models.DurationField(default=datetime.timedelta(0))),
                ('average_watch_time', models.DurationField(default=datetime.timedelta(0))),
                ('direct_traffic', models.PositiveIntegerField(default=0)),
                ('search_traffic', models.PositiveIntegerField(default=0)),
                ('social_traffic', models.PositiveIntegerField(default=0)),
                ('external_traffic', models.PositiveIntegerField(default=0)),
                ('mobile_views', models.PositiveIntegerField(default=0)),
                ('desktop_views', models.PositiveIntegerField(default=0)),
                ('tablet_views', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Video Analytics',
                'verbose_name_plural': 'Video Analytics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ViewerDemographics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('channel_owner', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('age_13_17', models.PositiveIntegerField(default=0)),
                ('age_18_24', models.PositiveIntegerField(default=0)),
                ('age_25_34', models.PositiveIntegerField(default=0)),
                ('age_35_44', models.PositiveIntegerField(default=0)),
                ('age_45_54', models.PositiveIntegerField(default=0)),
                ('age_55_64', models.PositiveIntegerField(default=0)),
                ('age_65_plus', models.PositiveIntegerField(default=0)),
                ('male_viewers', models.PositiveIntegerField(default=0)),
                ('female_viewers', models.PositiveIntegerField(default=0)),
                ('other_gender', models.PositiveIntegerField(default=0)),
                ('mobile_users', models.PositiveIntegerField(default=0)),
                ('desktop_users', models.PositiveIntegerField(default=0)),
                ('tablet_users', models.PositiveIntegerField(default=0)),
                ('smart_tv_users', models.PositiveIntegerField(default=0)),
                ('top_country_1', models.CharField(default='Uzbekistan', max_length=100)),
                ('top_country_1_views', models.PositiveIntegerField(default=0)),
                ('top_country_2', models.CharField(default='Russia', max_length=100)),
                ('top_country_2_views', models.PositiveIntegerField(default=0)),
                ('top_country_3', models.CharField(default='Kazakhstan', max_length=100)),
                ('top_country_3_views', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Viewer Demographics',
                'verbose_name_plural': 'Viewer Demographics',
                'ordering': ['-date'],
                'unique_together': {('channel_owner', 'date')},
            },
        ),
        migrations.AddIndex(
            model_name='videoanalytics',
            index=models.Index(fields=['video_owner', '-date'], name='main_videoa_video_o_2bab5f_idx'),
        ),
        migrations.AddIndex(
            model_name='videoanalytics',
            index=models.Index(fields=['video_id', '-date'], name='main_videoa_video_i_68e974_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='videoanalytics',
            unique_together={('video_id', 'video_owner', 'date')},
        ),
        migrations.AddIndex(
            model_name='trafficsource',
            index=models.Index(fields=['channel_owner', '-date'], name='main_traffi_channel_58d165_idx'),
        ),
        migrations.AddIndex(
            model_name='trafficsource',
            index=models.Index(fields=['video_id', '-date'], name='main_traffi_video_i_d80641_idx'),
        ),
        migrations.AddField(
            model_name='materialrating',
            name='material',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='main.material'),
        ),
        migrations.AddField(
            model_name='materialrating',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='materialdownload',
            name='material',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to='main.material'),
        ),
        migrations.AddField(
            model_name='materialdownload',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_downloads', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='materialcollection',
            name='materials',
            field=models.ManyToManyField(blank=True, to='main.Material'),
        ),
        migrations.AddField(
            model_name='materialcollection',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_collections', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='material',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='channelanalytics',
            index=models.Index(fields=['channel_owner', '-date'], name='main_channe_channel_872f05_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='channelanalytics',
            unique_together={('channel_owner', 'date')},
        ),
        migrations.AddField(
            model_name='analyticssession',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics_sessions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='analyticsreport',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='analyticsgoal',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics_goals', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='analyticsalert',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics_alerts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='materialrating',
            unique_together={('user', 'material')},
        ),
        migrations.AlterUniqueTogether(
            name='materialdownload',
            unique_together={('user', 'material')},
        ),
        migrations.AlterUniqueTogether(
            name='materialcollection',
            unique_together={('user', 'name')},
        ),
        migrations.AddIndex(
            model_name='material',
            index=models.Index(fields=['author', '-created_at'], name='main_materi_author__d46520_idx'),
        ),
        migrations.AddIndex(
            model_name='material',
            index=models.Index(fields=['file_type', '-created_at'], name='main_materi_file_ty_f44f53_idx'),
        ),
        migrations.AddIndex(
            model_name='material',
            index=models.Index(fields=['-download_count'], name='main_materi_downloa_158537_idx'),
        ),
    ]
