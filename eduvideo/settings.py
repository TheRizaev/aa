"""
Django settings for eduvideo project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from google.cloud import storage
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7oyx^5!h+&p31w428dfh+$yj-sav9x+gr9-!m(3f0g)a&@tb!w'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
DEBUG_PROPAGATE_EXCEPTIONS = True
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'main',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'eduvideo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # Указываем путь к шаблонам
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'main.views.base_context_processor',  # Add this context processor
            ],
        },
    },
]

WSGI_APPLICATION = 'eduvideo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs', 'django.log'),  # Папка logs
            'formatter': 'verbose',
            'encoding': 'utf-8',  # Поддержка кириллицы
        },
    },
    'loggers': {
        'main': {  # Логер для приложения main
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'main.gcs_storage': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
STATIC_DIR = os.path.join(BASE_DIR, 'static') 
STATIC_ROOT = BASE_DIR / 'staticfiles'  # for production

# Removed MEDIA_URL and MEDIA_ROOT since we're using GCS exclusively

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Email настройки
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.mail.ru'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'no-reply-core@mail.ru'
EMAIL_HOST_PASSWORD = 'VA6rjzeDgcuv5yXwSmUB'
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# Email администратора для получения заявок
ADMIN_EMAIL = 'rizaevamir9@gmail.com'  # Замените на свой email
VOSK_MODEL_PATH = os.path.join(BASE_DIR, 'models', 'vosk-model-ru')
OPENAI_API_KEY = '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'

# AI Chat настройки
AI_CHAT_SETTINGS = {
    'MODEL': 'gpt-4',  # Или 'gpt-4' для лучшего качества
    'MAX_TOKENS': 1000,
    'TEMPERATURE': 0.7,
    'STREAM_TIMEOUT': 30,  # Таймаут для streaming в секундах
    'MAX_MESSAGES_PER_SESSION': 50,  # Максимум сообщений в сессии
    'RATE_LIMIT_PER_MINUTE': 20,  # Лимит запросов в минуту на пользователя
    'MAX_HISTORY_MESSAGES': 100,  # Максимум сообщений в истории
    'CONTEXT_MESSAGES': 10,       # Сообщений для контекста ИИ
    'AUTO_CLEANUP': True,         # Автоочистка старых сообщений
}

# Логирование для AI чата
LOGGING['loggers']['main.ai_views'] = {
    'handlers': ['file'],
    'level': 'DEBUG',
    'propagate': True,
}

# CSRF настройки для AI API
CSRF_TRUSTED_ORIGINS = [
    'http://localhost:8000',
    'http://127.0.0.1:8000',
    # Добавьте ваш домен в продакшене
]

# Для разработки - разрешить CORS для локальных запросов
if DEBUG:
    CORS_ALLOW_ALL_ORIGINS = True
    CORS_ALLOW_CREDENTIALS = True
    
# Кэширование для AI ответов (опционально)
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    },
    'ai_cache': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'ai-responses',
        'TIMEOUT': 300,  # 5 минут
        'OPTIONS': {
            'MAX_ENTRIES': 1000,
        }
    }
}

# Настройки для ограничения скорости запросов (rate limiting)
RATE_LIMIT_ENABLE = True
RATE_LIMIT_USE_CACHE = 'default'
